package com.camenduru.web.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SettingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSettingAllPropertiesEquals(Setting expected, Setting actual) {
        assertSettingAutoGeneratedPropertiesEquals(expected, actual);
        assertSettingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSettingAllUpdatablePropertiesEquals(Setting expected, Setting actual) {
        assertSettingUpdatableFieldsEquals(expected, actual);
        assertSettingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSettingAutoGeneratedPropertiesEquals(Setting expected, Setting actual) {
        assertThat(expected)
            .as("Verify Setting auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSettingUpdatableFieldsEquals(Setting expected, Setting actual) {
        assertThat(expected)
            .as("Verify Setting relevant properties")
            .satisfies(e -> assertThat(e.getLogin()).as("check login").isEqualTo(actual.getLogin()))
            .satisfies(e -> assertThat(e.getTotal()).as("check total").isEqualTo(actual.getTotal()))
            .satisfies(e -> assertThat(e.getMembership()).as("check membership").isEqualTo(actual.getMembership()))
            .satisfies(e -> assertThat(e.getNotifyUri()).as("check notifyUri").isEqualTo(actual.getNotifyUri()))
            .satisfies(e -> assertThat(e.getNotifyToken()).as("check notifyToken").isEqualTo(actual.getNotifyToken()))
            .satisfies(e -> assertThat(e.getDiscordUsername()).as("check discordUsername").isEqualTo(actual.getDiscordUsername()))
            .satisfies(e -> assertThat(e.getDiscordId()).as("check discordId").isEqualTo(actual.getDiscordId()))
            .satisfies(e -> assertThat(e.getDiscordChannel()).as("check discordChannel").isEqualTo(actual.getDiscordChannel()))
            .satisfies(e -> assertThat(e.getDiscordToken()).as("check discordToken").isEqualTo(actual.getDiscordToken()))
            .satisfies(e -> assertThat(e.getApiKey()).as("check apiKey").isEqualTo(actual.getApiKey()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSettingUpdatableRelationshipsEquals(Setting expected, Setting actual) {}
}
